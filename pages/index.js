import Head from 'next/head'
import { useEffect, useState } from 'react'
import styles from '../styles/Home.module.css'

export default function Home() {

  const judge = {
    rock: { rock: 'Draw', paper: 'Loss', scissors: 'Win' },
    paper: { rock: 'Win', paper: 'Draw', scissors: 'Loss' },
    scissors: { rock: 'Loss', paper: 'Win', scissors: 'Draw' }
  }

  const [myHand, setMyHand] = useState('');
  const [comHand, setComHand] = useState('');
  const [result, setResult] = useState('Victory or Defeat');
  const [status, setStatus] = useState(1);
  const [handleAble, setHandleAble] = useState(false);
  const [winNum, setWinNum] = useState(0);
  const [drawNum, setDrawNum] = useState(0);
  const [lossNum, setLossNum] = useState(0);
  const [conWin, setConWin] = useState(0);

  useEffect(() => {
    const num = Math.floor(Math.random() * 3);
    num === 0 && setComHand('rock');
    num === 1 && setComHand('paper');
    num === 2 && setComHand('scissors');
  }, [status]);

  const getHand = (hand) => {
    const res = judge[hand][comHand];
    console.log(res);
    setHandleAble(true);
    setMyHand(hand);
    setResult(res);
    res === 'Win' && setWinNum((inData) => inData + 1);
    res === 'Win' ? setConWin((inData) => inData + 1) : null;
    res === 'Draw' && setDrawNum((inData) => inData + 1);
    res === 'Loss' && setLossNum((inData) => inData + 1);
    res === 'Loss' ? setConWin(0) : null;

  }

  const nextFnc = () => {
    setHandleAble(false);
    setStatus((status) => status + 1)
    setMyHand('');
    setComHand('');
    conWin>4 && setConWin(0);
  }

  const clearFnc = () => {
    setStatus(1);
    setWinNum(0);
    setLossNum(0);
    setDrawNum(0);
  }

  const mainStyle = [styles.main, styles.sub1, styles.sub2, styles.sub3, styles.sub4];

  const [test,setTest]=useState(1);

  // conWin===5 ? setTest(0) : setTest(1);

  return (
    conWin<5 ?
      <div className={styles.container}>
        <Head>
          <title>Rock-Paper-Scissors App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="apple-mobile-web-app-capable" content="yes" />
          <link rel="icon" href="/favicon.ico" />
          <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
        </Head>
        <header className={styles.header}>
          <div>
          <h2><span className="material-symbols-outlined">
          </span> Rock-Paper-Scissors App</h2>
          </div>
          <h3>Your Winner if you would win 5 times continuously!</h3>
        </header>
        <main className={
          conWin > 1 ? `${mainStyle[0]} ${mainStyle[conWin - 1]}` : mainStyle[0]
        }>
          <div className={styles.my}>
            <h3>{status}回目の勝負</h3>
            {!myHand && <h3>Select your Hand!</h3>}
            <button className={styles.button} onClick={() => getHand('rock')} disabled={handleAble}>✊</button>
        <button className={styles.button} onClick={() => getHand('paper')} disabled={handleAble}>✋</button>
        <button className={styles.button} onClick={() => getHand('scissors')} disabled={handleAble}>✌</button>
            {/* <button className={styles.button} onClick={() => getHand('rock')} disabled={handleAble}>Rock</button>
            <button className={styles.button} onClick={() => getHand('paper')} disabled={handleAble}>Paper</button>
            <button className={styles.button} onClick={() => getHand('scissors')} disabled={handleAble}>Scissors</button> */}

            {myHand && <p>自分:{myHand}</p>}
            {!myHand && <p>自分:Push Button</p>}
            {myHand && <p>相手:{comHand}</p>}
            {!myHand && <p>相手:Thinking</p>}

            {myHand ? <h2 className={`${styles.myHand}
        ${result === 'Win' ? styles.myHandWin :
                result === 'Loss' ? styles.myHandLoss :
                  styles.myHandDraw}
            `}>{result}</h2> : <h2 className={styles.myHand}>Win or Loss</h2>}
            {myHand && <button className={styles.button_next} onClick={nextFnc}>NEXT</button>}
            <h3>{`${winNum}勝　${lossNum}敗　${drawNum}引分け`}</h3>
          </div >
          {!myHand && <button onClick={clearFnc}>CLEAR</button>}
          <p>連続{conWin}勝中</p>
        </main >
        <footer className={styles.footer}><h2><span className="material-symbols-outlined">
          star
        </span> Created by Ryotaro</h2></footer>
      </div >
      :
      <div className={styles.winner}>
        <h2>You are Winner!!</h2>
        <button onClick={nextFnc}>Challenge Again</button>
      </div>
  )
}
